cmake_minimum_required(VERSION 2.6)

project(TrackVisualization)

FIND_PACKAGE(VTK REQUIRED)
IF(NOT VTK_USE_RENDERING)
  MESSAGE(FATAL_ERROR "Example ${PROJECT_NAME} requires VTK_USE_RENDERING.")
ENDIF(NOT VTK_USE_RENDERING)
INCLUDE(${VTK_USE_FILE})

# use what QVTK built with
SET(QT_MOC_EXECUTABLE ${VTK_QT_MOC_EXECUTABLE} CACHE FILEPATH "")
SET(QT_UIC_EXECUTABLE ${VTK_QT_UIC_EXECUTABLE} CACHE FILEPATH "")
SET(QT_QMAKE_EXECUTABLE ${VTK_QT_QMAKE_EXECUTABLE} CACHE FILEPATH "")
SET(DESIRED_QT_VERSION ${VTK_DESIRED_QT_VERSION} CACHE FILEPATH "")
FIND_PACKAGE(Qt4 REQUIRED)
INCLUDE(${QT_USE_FILE})

OPTION (USE_VIDEO_RECORD "FFMPEG MUST BE INSTALLED" ON)

MESSAGE("USE_VIDEO_RECORD " ${USE_VIDEO_RECORD})

IF(USE_VIDEO_RECORD)
MESSAGE("in USE_VIDEO_RECORD")
  IF(VTK_USE_FFMPEG_ENCODER)
    MESSAGE("VTK_USE_FFMPEG_ENCODER on " ${VTK_USE_FFMPEG_ENCODER})
    ADD_DEFINITIONS(-DUSEFFMPEG)
  ELSE(VTK_USE_FFMPEG_ENCODER)
    MESSAGE("VTK_USE_FFMPEG_ENCODER off " ${VTK_USE_FFMPEG_ENCODER})
    REMOVE_DEFINITIONS(-DUSEFFMPEG)
    SET(USE_VIDEO_RECORD OFF)
  ENDIF(VTK_USE_FFMPEG_ENCODER)
ENDIF(USE_VIDEO_RECORD)

SET( TESTING_DATA_PATH
  ${CMAKE_CURRENT_SOURCE_DIR}/test/polydatas
)

SET( SOURCE_DATA_PATH
  ${CMAKE_CURRENT_SOURCE_DIR}/src
)

ENABLE_TESTING()

add_subdirectory(src)
add_subdirectory(test)




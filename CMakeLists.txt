cmake_minimum_required(VERSION 2.6)

project(TRACKVISUALIZATION)

FIND_PACKAGE(VTK REQUIRED)
IF(NOT VTK_USE_RENDERING)
  MESSAGE(FATAL_ERROR "Example ${PROJECT_NAME} requires VTK_USE_RENDERING.")
ENDIF(NOT VTK_USE_RENDERING)
INCLUDE(${VTK_USE_FILE})

# use what QVTK built with
SET(QT_MOC_EXECUTABLE ${VTK_QT_MOC_EXECUTABLE} CACHE FILEPATH "")
SET(QT_UIC_EXECUTABLE ${VTK_QT_UIC_EXECUTABLE} CACHE FILEPATH "")
SET(QT_QMAKE_EXECUTABLE ${VTK_QT_QMAKE_EXECUTABLE} CACHE FILEPATH "")
SET(DESIRED_QT_VERSION ${VTK_DESIRED_QT_VERSION} CACHE FILEPATH "")
FIND_PACKAGE( Qt4 REQUIRED )
INCLUDE( ${QT_USE_FILE} )

OPTION (USE_VIDEO_RECORD "FFMPEG MUST BE INSTALLED" ON)

IF(USE_VIDEO_RECORD)
  IF( VTK_USE_FFMPEG_ENCODER )
    ADD_DEFINITIONS(-DUSEFFMPEG)
  ELSE( VTK_USE_FFMPEG_ENCODER )
    REMOVE_DEFINITIONS(-DUSEFFMPEG)
    SET( USE_VIDEO_RECORD OFF )
  ENDIF( VTK_USE_FFMPEG_ENCODER )
ENDIF( USE_VIDEO_RECORD )

# all target executables will be
# in ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY
  ${TRACKVISUALIZATION_BINARY_DIR}/bin
)

# all target static libraries will be in ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}
SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY
  ${TRACKVISUALIZATION_BINARY_DIR}/lib
)

SET( TESTING_DATA_PATH
  ${CMAKE_CURRENT_SOURCE_DIR}/test/polydatas
)

SET( SOURCE_DATA_PATH
  ${CMAKE_CURRENT_SOURCE_DIR}/src
)

INCLUDE( CTest )

# CMAKE 2.8 does not allow subdirs with no CMakeLists.txt
add_subdirectory(src)

add_subdirectory(test)

